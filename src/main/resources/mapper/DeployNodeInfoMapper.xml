<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.itcast.ssm.mapper.DeployNodeInfoMapper">
  <resultMap id="BaseResultMap" type="cn.itcast.ssm.po.DeployNodeInfo">
    <id column="deploy_node_id" jdbcType="INTEGER" property="deployNodeId" />
    <result column="address_id" jdbcType="INTEGER" property="addressId" />
    <result column="node_name" jdbcType="VARCHAR" property="nodeName" />
    <result column="purpose_explain" jdbcType="VARCHAR" property="purposeExplain" />
    <result column="inside_location" jdbcType="VARCHAR" property="insideLocation" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    deploy_node_id, address_id, node_name, purpose_explain, inside_location, remarks, 
    parent_id
  </sql>
  <select id="selectByExample" parameterType="cn.itcast.ssm.po.DeployNodeInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from deploy_node_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from deploy_node_info
    where deploy_node_id = #{deployNodeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from deploy_node_info
    where deploy_node_id = #{deployNodeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.itcast.ssm.po.DeployNodeInfoExample">
    delete from deploy_node_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.itcast.ssm.po.DeployNodeInfo">
    insert into deploy_node_info (deploy_node_id, address_id, node_name, 
      purpose_explain, inside_location, remarks, 
      parent_id)
    values (#{deployNodeId,jdbcType=INTEGER}, #{addressId,jdbcType=INTEGER}, #{nodeName,jdbcType=VARCHAR}, 
      #{purposeExplain,jdbcType=VARCHAR}, #{insideLocation,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.itcast.ssm.po.DeployNodeInfo">
    insert into deploy_node_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="deployNodeId != null">
        deploy_node_id,
      </if>
      <if test="addressId != null">
        address_id,
      </if>
      <if test="nodeName != null">
        node_name,
      </if>
      <if test="purposeExplain != null">
        purpose_explain,
      </if>
      <if test="insideLocation != null">
        inside_location,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="deployNodeId != null">
        #{deployNodeId,jdbcType=INTEGER},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=INTEGER},
      </if>
      <if test="nodeName != null">
        #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="purposeExplain != null">
        #{purposeExplain,jdbcType=VARCHAR},
      </if>
      <if test="insideLocation != null">
        #{insideLocation,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.itcast.ssm.po.DeployNodeInfoExample" resultType="java.lang.Long">
    select count(*) from deploy_node_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update deploy_node_info
    <set>
      <if test="record.deployNodeId != null">
        deploy_node_id = #{record.deployNodeId,jdbcType=INTEGER},
      </if>
      <if test="record.addressId != null">
        address_id = #{record.addressId,jdbcType=INTEGER},
      </if>
      <if test="record.nodeName != null">
        node_name = #{record.nodeName,jdbcType=VARCHAR},
      </if>
      <if test="record.purposeExplain != null">
        purpose_explain = #{record.purposeExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.insideLocation != null">
        inside_location = #{record.insideLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update deploy_node_info
    set deploy_node_id = #{record.deployNodeId,jdbcType=INTEGER},
      address_id = #{record.addressId,jdbcType=INTEGER},
      node_name = #{record.nodeName,jdbcType=VARCHAR},
      purpose_explain = #{record.purposeExplain,jdbcType=VARCHAR},
      inside_location = #{record.insideLocation,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.itcast.ssm.po.DeployNodeInfo">
    update deploy_node_info
    <set>
      <if test="addressId != null">
        address_id = #{addressId,jdbcType=INTEGER},
      </if>
      <if test="nodeName != null">
        node_name = #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="purposeExplain != null">
        purpose_explain = #{purposeExplain,jdbcType=VARCHAR},
      </if>
      <if test="insideLocation != null">
        inside_location = #{insideLocation,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
    </set>
    where deploy_node_id = #{deployNodeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.itcast.ssm.po.DeployNodeInfo">
    update deploy_node_info
    set address_id = #{addressId,jdbcType=INTEGER},
      node_name = #{nodeName,jdbcType=VARCHAR},
      purpose_explain = #{purposeExplain,jdbcType=VARCHAR},
      inside_location = #{insideLocation,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER}
    where deploy_node_id = #{deployNodeId,jdbcType=INTEGER}
  </update>
</mapper>
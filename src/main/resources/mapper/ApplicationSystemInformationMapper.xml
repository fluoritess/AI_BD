<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.itcast.ssm.mapper.ApplicationSystemInformationMapper">
  <resultMap id="BaseResultMap" type="cn.itcast.ssm.po.ApplicationSystemInformation">
    <id column="application_system_id" jdbcType="INTEGER" property="applicationSystemId" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="describe" jdbcType="VARCHAR" property="describe" />
    <result column="system_name" jdbcType="VARCHAR" property="systemName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    application_system_id, remarks, describe, system_name
  </sql>
  <select id="selectByExample" parameterType="cn.itcast.ssm.po.ApplicationSystemInformationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from application_system_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from application_system_information
    where application_system_id = #{applicationSystemId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from application_system_information
    where application_system_id = #{applicationSystemId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.itcast.ssm.po.ApplicationSystemInformationExample">
    delete from application_system_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.itcast.ssm.po.ApplicationSystemInformation">
    insert into application_system_information (application_system_id, remarks, describe, 
      system_name)
    values (#{applicationSystemId,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, #{describe,jdbcType=VARCHAR}, 
      #{systemName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.itcast.ssm.po.ApplicationSystemInformation">
    insert into application_system_information
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="applicationSystemId != null">
        application_system_id,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="describe != null">
        describe,
      </if>
      <if test="systemName != null">
        system_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="applicationSystemId != null">
        #{applicationSystemId,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="describe != null">
        #{describe,jdbcType=VARCHAR},
      </if>
      <if test="systemName != null">
        #{systemName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.itcast.ssm.po.ApplicationSystemInformationExample" resultType="java.lang.Long">
    select count(*) from application_system_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update application_system_information
    <set>
      <if test="record.applicationSystemId != null">
        application_system_id = #{record.applicationSystemId,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.describe != null">
        describe = #{record.describe,jdbcType=VARCHAR},
      </if>
      <if test="record.systemName != null">
        system_name = #{record.systemName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update application_system_information
    set application_system_id = #{record.applicationSystemId,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      describe = #{record.describe,jdbcType=VARCHAR},
      system_name = #{record.systemName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.itcast.ssm.po.ApplicationSystemInformation">
    update application_system_information
    <set>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="describe != null">
        describe = #{describe,jdbcType=VARCHAR},
      </if>
      <if test="systemName != null">
        system_name = #{systemName,jdbcType=VARCHAR},
      </if>
    </set>
    where application_system_id = #{applicationSystemId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.itcast.ssm.po.ApplicationSystemInformation">
    update application_system_information
    set remarks = #{remarks,jdbcType=VARCHAR},
      describe = #{describe,jdbcType=VARCHAR},
      system_name = #{systemName,jdbcType=VARCHAR}
    where application_system_id = #{applicationSystemId,jdbcType=INTEGER}
  </update>
</mapper>